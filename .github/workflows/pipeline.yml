name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]


jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: npm install
        run: npm install
      - name: lint
        run: npm run eslint
      - name: build
        run: npm run build
      - name: test
        run: npm run test
  tag_release:
    runs-on: ubuntu-20.04
    needs: [simple_deployment_pipeline]
    if: |
      github.event_name == 'push' ||
      !contains(join(github.event.commits.*.message), '#SKIP')
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
  heroku_deployment:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "marvelous-crater-lake-02747" #Must be unique in Heroku
          heroku_email: "atte.laakso91@gmail.com"
          healthcheck: "https://marvelous-crater-lake-02747.herokuapp.com/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
        if: |
          github.event_name == 'push' ||
          !contains(join(github.event.commits.*.message), '#SKIP')
  a_test_job:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ !contains(join(github.event.commits.*.message), '#SKIP') }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ join(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
